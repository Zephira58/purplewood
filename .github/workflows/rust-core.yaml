# A custom github action for all of the core jobs i want done across all of my repos
# Made by @Xanthus58

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support.

name: Rust-Core

on:
  push:
    branches: [ "*" ]
  pull_request:
    types: [opened, reopened]
  
jobs:
# Ensure the application can be built and run successfully
  build:
    name: Run Cargo build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

# Runs cargo test to ensure all unit tests pass
  unit_tests:
    runs-on: ubuntu-latest
    name: Testing
    steps:
      - uses: actions/checkout@v4
      - name: "Test local rust"
        uses: Kristories/cargo-test@v1.0.0
        with:
          manifest-path: './Cargo.toml'
  
# Runs rust clippy for any and all suggestions
  rust-clippy-analyze:
    name: Run rust-clippy analyzing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Run rust-clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

# Runs cargo fmt and pushes any changes to the github repo
  format:
    name: Run Cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt
            override: true
      - uses: mbrobbel/rustfmt-check@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}